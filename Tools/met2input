#!/bin/bash

# Reference this script
cd `dirname $0`
mydir=`pwd -P`

pyprog="$mydir/../CONFIG/autowrf_namelist_main.py"
dateprog="$mydir/datecompare.py"
datefmt='%Y-%m-%d_%H:%M:%S'


# Input arguments: first and last date to process
firstdate="$1"
lastdate="$2"

# Change into the WRF/run directory, get a list of the met_em files
cd ../../WRFV3/run
mets=met_em*

# For each met file, switch the namelist (temporarily) to run just
# that time, generate wrfinput_d01, then move that to be 
# wrfinput_d01_yyyy-mm-dd_HH:MM:SS
regex=[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]_[0-9][0-9]:[0-9][0-9]:[0-9][0-9]
for f in $mets; do
    if [[ $f =~ $regex ]]; then
        mdate="${BASH_REMATCH[0]}"
        echo "Met date = $mdate"
        if [[ ! -z $firstdate ]] && $(python "$dateprog" -f "$datefmt" "$mdate" lt "$firstdate"); then
            echo "Before first date $firstdate, skipping"
            continue
        elif [[ ! -z $lastdate ]] && $(python "$dateprog" -f "$datefmt" "$mdate" gt "$lastdate"); then
            echo "After last date $lastdate, skipping"
            continue
        fi

        python $pyprog tempmod --start-date="$mdate" --run-time=0h --io_style_emissions=0 --emiss_inpt_opt=0 --bio_emiss_opt=0
        echo "Generating wrfinput for $mdate"
        ./real.exe
        if [[ $? -ne 0 ]]; then
            echo "real.exe failed when working on $mdate" >&2
            echo "Check rsl.error.0000 if no other error message printed above" >&2
            exit 1
        fi
        mv wrfinput_d01 "wrfinput_d01_$mdate"
    fi
done

echo "Restoring namelist to original state"
python $pyprog tempmod
exit 0

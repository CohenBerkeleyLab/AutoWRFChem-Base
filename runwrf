#!/bin/bash
#
# This is it! Time to run WRF. Will do some checking first though.
# 1) Is the namelist.input correctly linked? If not, error because
#    the user needs to check that the emissions and meteorology are
#    correct.
# 2) The emissions files are present.
# 3) The met files for the start and end date are present

cd `dirname $0`
myname=`basename $0`
mydir=`pwd -P`
pyprog="$mydir/CONFIG/autowrf_namelist_main.py"
pydate="$mydir/Tools/datecompare.py"

# See if this was called with the "override" flag
override=false
usempi=true
useenvcmd=false
metonly=false
rst=false
errnorst=true
dryrun=false
while [ $# -gt 0 ]; do
    case $1 in
        override|--override)
            override=true
            ;;
        --met-only)
            metonly=true
            ;;
        --ntasks*)
            i=`expr index "$1" "="`
            ntasks=${1:i}
            usempi=true
            ;;
        --alt-mpi-cmd)
            useenvcmd=true
            usempi=true
            ;;
        --nompi)
            usempi=false
            ;;
        --restart)
            rst=true
            ;;
        --allow-no-file)
            errnorst=false
            ;;
        --run-for*)
            i=`expr index $1 "="`
            runfor=${1:i}
            ;;
        --dry-run)
            dryrun=true
            ;;
    esac
    shift
done


# INPUT CHECKING 
if $usempi && ! $useenvcmd; then
    if [ -z "$ntasks" ]; then
        echo "Must pass a number of tasks to start with --ntasks= if running WRF in parallel"
        echo "or use the --mpicmd= option to specify an alternate command to execute WRF."
        echo "(give option --nompi to run using syntax ./wrf.exe)"
        exit 1
    fi
fi

# Undo any other temporary changes to the namelist
python "$pyprog" tempmod

cd ../WRFV3/run
if [ ! "namelist.input" -ef "$mydir/CONFIG/namelist.input" ]; then
    echo "WRFV3/run/namelist.input is not a link to"
    echo " $mydir/CONFIG/namelist.input"
    echo "This should NOT be the case if you have run 'autowrfchem prepinpt'"
    if ! $override; then
        echo "Aborting run. To force the run, use 'autowrfchem run --override'"
        exit 1
    fi
fi

missingfile=false
if ! $metonly; then
    if [ ! -f wrfchemi_00z_d01 -o ! -f wrfchemi_12z_d01 ]; then
        echo "One or both of wrfchemi_00z_d01, wrfchemi_12z_d01 not found in WRFV3/run"
        missingfile=true
    fi

    if [ ! -f wrfbiochemi_d01 ]; then
        echo "wrfbiochemi_d01 not found in WRFV3/run"
        missingfile=true
    fi
fi


if $missingfile; then
    echo "One or more missing files, aborting run."
    exit 1
fi

# If the --run-for flag is given, we'll need to set the run time to match. Do not exceed the
# given end date, so we'll need to test that after figuring out the start time (from the
# restart file if specified). Now we can go ahead and check vs. the specified start time
nl_startdate=$(python "$pyprog" get-wps-opt --no-quotes --start_date)
nl_enddate=$(python "$pyprog" get-wps-opt --no-quotes --end_date)
if [[ ! -z $runfor ]]; then
    python "$pydate" --datefmt='%Y-%m-%d_%H:%M:%S' "$nl_startdate" "+$runfor" lt "$nl_enddate"
    if [[ $? == 0 ]]; then
        runtimearg="--run-time=$runfor"
    fi
fi

# If we need to restart, then find the last restart file and set the date to it
if $rst; then
    rstfile=`$mydir/RUNUTILS/lastrst`
    if [[ ! -z $rstfile ]]; then
        regex="[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]_[0-9][0-9]:[0-9][0-9]:[0-9][0-9]"
        if [[ $rstfile =~ $regex ]]; then
            rdate="${BASH_REMATCH[0]}"
            python "$pydate" --datefmt='%Y-%m-%d_%H:%M:%S' "$rdate" "+$runfor" "ge" "$nl_enddate"
            if [[ $? == 0 ]]; then
                # If the specified run time would cause the new end time to be after the one
                # given in the namelist, then do not modify the run time
                runtimearg=""
            fi
            python $pyprog tempmod --start-date="$rdate" --restart=".true." $runtimearg
        else
            echo "$myname: Could not determine date of restart file ($rstfile), aborting run"
            exit 1
        fi
    else
        if $errnorst; then
            echo "$myname: No restart file in the time period of the namelist found, aborting run"
            exit 1
        else
            echo "No restart file in the time period of the namelist found, starting at beginning"
            python $pyprog tempmod --restart=".false." $runtimearg
        fi
    fi
elif [[ ! -z $runfor ]]; then
    python $pyprog tempmod $runtimearg
fi

# Format the run command
if $useenvcmd; then
    if [[ -z $AWC_MPICMD ]]; then
        echo "Error trying to use --alt-mpi-cmd: Environmental variable AWC_MPICMD not set, aborting run"
        exit 1
    fi
    runcmd="$AWC_MPICMD"
elif $usempi; then
    runcmd="mpirun -np $ntasks ./wrf.exe"
else
    runcmd="./wrf.exe >& runwrf.log"
fi

# Actually run WRF!
if $dryrun; then
    echo "$runcmd in $(pwd)"
    wrfexit=0
else
    $runcmd
    wrfexit=$?
fi

if [ $wrfexit -ne 0 ]; then
    echo "WRF failed (exit code $wrfexit). Check the $errorfile file in WRFV3/run"
    echo "to determine the cause."
fi
exit $wrfexit

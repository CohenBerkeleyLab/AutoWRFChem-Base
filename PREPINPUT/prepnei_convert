#!/bin/bash
# THIS one will be somewhat complicated. It needs to 
#  1) reset the WRF namelist to the first 12 hours of the time period and turn off bio emissions
#  2) run real, then convert_emiss.exe
#  3) reset the namelist to the second 12 hours of the time period
#  4) run real then convert_emiss.exe again
# After each, it should verify that the wrfchemi file was generated.
# I think convert_emiss.exe may be smart enough to allow both to be generated simultaneously
# but I have never tried that.

cd `dirname $0`
mydir=`pwd -P`

pyprog="$mydir/../CONFIG/autowrf_namelist_main.py"
pyemiyr="$mydir/bestemissyear.py"
# Now temporarily reset both the run time and the bio_emiss_opt
# Need to use 11 h runtime (and make sure that convert_emiss doesn't ACTUALLY
# look at the run time) because that's the best way to get end hour = 11 and
# keep the python program consistent.
#
# Also for a run that spans multiple years we have to be a little tricky about 
# how we handle the date, since we automatically scale the emissions by year.
# In 
if [[ $FDDA_ON == 1 ]]; then
    fdda_args="$pyargs --grid_fdda=0"
else
    fdda_args=""
fi

run_sdate=$(python $pyprog get-wps-opt --no-quotes --start_date)
run_edate=$(python $pyprog get-wps-opt --no-quotes --end_date)

emi_sdate=$(python $pyemiyr 00z $run_sdate $run_edate)
# Set up the namelist to run the first 12 hour period for convert_emiss.exe. The emi_sdate (emissions start date)
# is set up to be in the year that we want to scale emissions to. --run-time=11 h is necessary to generate the
# first 12 hours; convert_emiss seems to take the start date and run time rather than the start and end dates.
# Since we have no MEGAN data yet, bio_emiss_opt cannot be 3, so set it to 0. Setting restart to .false. deals
# with an unusual case where I was running from a restart file with new boundary conditions, with restart=.true.,
# it tried to find a restart file during the second 12-hour span, which obviously didn't exist. fdda_args turns
# off the FDDA nudging for real.exe only if it's been turned on; if the gfdda section of the namelist is missing,
# then trying to set that value gives an error.
python $pyprog tempmod --start-date=${emi_sdate} --run-time=11h --bio_emiss_opt=0 --restart=.false. $fdda_args
# Now we go over to the run directory. Backup any existing wrfchemi files, then
# run real.exe followed by convert_emiss.exe
cd ../../WRFV3/run
if [ -f wrfchemi_00z_d01 ]; then
    mv wrfchemi_00z_d01 wrfchemi_00z_d01.autowrf-backup
fi
if [ -f wrfchemi_12z_d01 ]; then
    mv wrfchemi_12z_d01 wrfchemi_12z_d01.autowrf-backup
fi

# Double check that the namelist is linked to the one in the CONFIG directory. Backup
# only if not already a link to somewhere
if [ -f namelist.input ]; then
    lnk=`readlink namelist.input`
    if [ ! -z $lnk ]; then
        mv namelist.input namelist.input.autowrf-backup
    fi
fi
ln -s "$mydir/../CONFIG/namelist.input"

./real.exe
realexit=$?
if [ $realexit -ne 0 ]; then
    echo "real.exe failed with exit code $realexit when running the 00-12z period for NEI emissions"
    echo "You should run it directly (with mpirun if compiled in parallel) and check any output to"
    echo "identify the problem"
    echo "Skipping the remainder of convert_emiss"
    exit 1
fi

./convert_emiss.exe
convexit=$?
cp -f rsl.error.0000 $mydir/../PREPLOGS/convert_00z.log
if [ $convexit -ne 0 ]; then
    echo "convert_emiss.exe failed with exit code $convexit when running the 00-12z period for NEI"
    echo "emissions. You should run it directly (with mpirun if compiled in parallel) and check any"
    echo "output to identify the problem"
    exit 1
fi
if [ ! -f wrfchemi_00z_d01 ]; then
    echo "convert_emiss.exe failed to produce wrfchemi_00z_d01. You should run it directly (with"
    echo "mpirun if compiled in parallel) and check any output to identify the problem."
    exit 1
fi


# Now set up for the second 12 hr segment. See the first 12 hr segment for the reasoning behing all the options.
emi_sdate=$(python $pyemiyr 12z $run_sdate $run_edate)
python $pyprog tempmod --start-date=${emi_sdate} --run-time=11h --bio_emiss_opt=0 --restart=.false. $fdda_args

./real.exe
realexit=$?
if [ $realexit -ne 0 ]; then
    echo "real.exe failed with exit code $realexit when running the 12-24z period for NEI emissions"
    echo "You should run it directly (with mpirun if compiled in parallel) and check any output to"
    echo "identify the problem"
    exit 1
fi

./convert_emiss.exe
convexit=$?
cp -f rsl.error.0000 $mydir/../PREPLOGS/convert_12z.log
if [ $convexit -ne 0 ]; then
    echo "convert_emiss.exe failed with exit code $convexit when running the 12-24z period for NEI"
    echo "emissions. You should run it directly (with mpirun if compiled in parallel) and check any"
    echo "output to identify the problem"
    exit 1
fi
if [ ! -f wrfchemi_12z_d01 ]; then
    echo "convert_emiss.exe failed to produce wrfchemi_12z_d01. You should run it directly (with"
    echo "mpirun if compiled in parallel) and check any output to identify the problem."
    exit 1
fi


# Restore the namelist to its user defined state, minus grid_fdda if it was on
python $pyprog tempmod $fdda_args

exit 0
